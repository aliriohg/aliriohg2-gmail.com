{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "load test infra ECS-S3",
    "Parameters": {
        "PrefixName": {
            "Description": "Prefix Gatling name",
            "Type": "String"
        },
        "DockerImage": {
            "Description": "Prefix DockerImage",
            "Type": "String"
        },
        "SimulationPath": {
            "Description": "The simulation with load test.",
            "Type": "String"
        },
        "CidrBlockVpc": {
            "Description": "CIDR block for VPC",
            "Type": "String",
            "Default": "10.11.33.0/25"
        },
        "CidrBlockSubnetA": {
            "Description": "CIDR block for SubnetA",
            "Type": "String",
            "Default": "10.11.33.0/27"
        },
        "CidrBlockSubnetB": {
            "Description": "CIDR block for SubnetB",
            "Type": "String",
            "Default": "10.11.33.32/27"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Ref": "CidrBlockVpc" },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "VPC"
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": { "Ref": "CidrBlockSubnetA" },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "PublicSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": { "Ref": "CidrBlockSubnetB" },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "DefaultPublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetA"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicSubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetB"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "DefaultSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": {
                    "Fn::Join": [
                        "", [{
                                "Ref": "PrefixName"
                            },
                            "-DEFAULT SG"
                        ]
                    ]
                },
                "GroupDescription": {
                    "Fn::Join": [
                        "", [{
                                "Ref": "PrefixName"
                            },
                            "-DEFAULT SG"
                        ]
                    ]
                },
                "VpcId": { "Ref": "VPC" }
            }
        },
        "EcsSecurityGroupIngressFromPublicALB": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "IpProtocol": -1,
                "GroupId": { "Ref": "DefaultSecurityGroup" },
                "CidrIp": "0.0.0.0/0"
            }
        },
        "GatlingResultS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "AccessControl": "Private",
                "BucketName": { "Fn::Sub": "${PrefixName}-gatling-result-bucket" },
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": true,
                    "BlockPublicPolicy": true,
                    "IgnorePublicAcls": true,
                    "RestrictPublicBuckets": true
                }
            }
        },
        "GatlingResultS3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": { "Ref": "GatlingResultS3Bucket" },
                "PolicyDocument": {
                    "Statement": [{
                        "Action": ["s3:*"],
                        "Effect": "Allow",
                        "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "GatlingResultS3Bucket" }, "/*"]] },
                        "Principal": {
                            "AWS": { "Fn::GetAtt": ["ECSTaskGatlingExecutionRole", "Arn"] }
                        }
                    }]
                }
            }
        },
        "GatlingECSCluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": { "Fn::Sub": "${PrefixName}-gatling-ecs-cluster" },
                "ClusterSettings": [{
                    "Name": "containerInsights",
                    "Value": "enabled"
                }]
            }
        },
        "GatlingTaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "ExecutionRoleArn": {
                    "Fn::GetAtt": ["ECSTaskGatlingExecutionRole", "Arn"]
                },
                "TaskRoleArn": {
                    "Fn::GetAtt": ["ECSTaskGatlingExecutionRole", "Arn"]
                },
                "NetworkMode": "awsvpc",
                "Family": { "Fn::Sub": "${PrefixName}-gatling-taskdefinition" },
                "ContainerDefinitions": [{
                    "Name": { "Ref": "DockerImage" },
                    "Image": "296553184312.dkr.ecr.us-east-1.amazonaws.com/gatling-images:latest",
                    "LogConfiguration": {
                        "LogDriver": "awslogs",
                        "Options": {
                            "awslogs-group": "/ecs/gatling-runner",
                            "awslogs-region": "us-east-1",
                            "awslogs-stream-prefix": "gatling-runner"
                        }
                    },
                    "Command": ["-r", { "Fn::Sub": "${PrefixName}-gatling-result-bucket" },
                        "-s", { "Fn::Sub": "${SimulationPath}" }
                    ],
                    "Environment": [
                        { "Name": "GATLING_MAX_DURATION", "Value": "1" },
                        { "Name": "GATLING_NR_USERS", "Value": "1" },
                        { "Name": "GATLING_RAMPUP_TIME", "Value": "10" }
                    ],
                    "Ulimits": [
                        { "Name": "nofile", "SoftLimit": 65535, "HardLimit": 65535 },
                        { "Name": "nproc", "SoftLimit": 65535, "HardLimit": 65535 }
                    ],
                    "Essential": true
                }],
                "Cpu": "1024",
                "Memory": "2048"
            }
        },
        "ECSTaskGatlingExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ecs-tasks.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }]
                },
                "Path": "/",
                "Policies": [{
                    "PolicyName": "ECSTaskGatlingExecutionRolePolicy",
                    "PolicyDocument": {
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": "*"
                        }]
                    }
                }]
            }
        }
    },
    "Outputs": {
        "BucketName": {
            "Description": "A reference to the Bucket",
            "Value": {
                "Ref": "GatlingResultS3Bucket"
            }
        },
        "GatlingTaskDefinition": {
            "Description": "A reference to the GatlingTaskDefinition",
            "Value": {
                "Ref": "GatlingTaskDefinition"
            }
        },
        "GatlingECSCluster": {
            "Description": "A reference to the GatlingECSCluster",
            "Value": {
                "Ref": "GatlingECSCluster"
            }
        },
        "DefaultSecurityGroup": {
            "Description": "A reference to the DefaultSecurityGroup",
            "Value": {
                "Ref": "DefaultSecurityGroup"
            }
        },
        "PublicSubnetA": {
            "Description": "A reference to the PublicSubnetA",
            "Value": {
                "Ref": "PublicSubnetA"
            }
        },
        "PublicSubnetB": {
            "Description": "A reference to the DefaultSecurityGroup",
            "Value": {
                "Ref": "PublicSubnetB"
            }
        }
    }
}